{"version":3,"sources":["component/Event.js","component/EventList.js","helpers/dateFormat.js","component/EventForms.js","component/Bob.js","component/About.js","component/Robert.js","App.js","serviceWorker.js","index.js"],"names":["Event","props","state","isOpen","toggleAccordion","bind","this","setState","onClick","className","eventTitle","Collapse","location","Attendes","Component","EventList","eventsInfo","map","st","dateTime","currentDate","eventDate","convert","str","date","Date","mnth","getMonth","slice","getDate","getFullYear","join","EventForms","AssignedTo","handleChange","handleSubmit","e","target","name","value","preventDefault","closeForm","addEvents","calendarEvents","title","addCalendarEvent","onSubmit","htmlFor","onChange","placeholder","id","Bob","BobEvents","BobCalendarEvent","user","useState","redirect","setredirect","seteventDate","setcalendarEvents","start","setstart","allDay","setallDay","useEffect","defaultView","header","left","center","right","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","events","dateClick","About","Robert","RobertEvents","RobertCalendarEvent","App","newCalendarEvent","newEvent","exact","activeClassName","to","path","component","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3da40183.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Collapse } from \"reactstrap\";\n\nexport default class Event extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.toggleAccordion = this.toggleAccordion.bind(this);\n  }\n\n  toggleAccordion() {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    return (\n      <div>\n        <div\n          onClick={this.toggleAccordion}\n          className=\"port-item p-4 bg-primary\"\n        >\n          <button className=\"btn btn-primary\">{this.props.eventTitle}</button>\n        </div>\n        <Collapse isOpen={this.state.isOpen}>\n          <div>\n            <ul>\n              <li>{this.props.eventTitle}</li>\n              <li>Location : {this.props.location}</li>\n              <li>Number of people : {this.props.Attendes}</li>\n            </ul>\n          </div>\n        </Collapse>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n\nexport default class EventList extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.eventsInfo.map(st => {\n          return (\n            <Event\n              eventTitle={st.eventTitle}\n              dateTime={st.dateTime}\n              location={st.location}\n              Attendes={st.Attendes}\n              currentDate={this.props.eventDate}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import { useEffect, useRef } from \"react\";\n\nconst convert = str => {\n  var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n  return [day, mnth, date.getFullYear()].join(\"/\");\n};\n\nconst usePrevious = val => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = val;\n  });\n  return ref.current;\n};\n\nexport { convert, usePrevious };\n","import React, { Component } from \"react\";\nimport \"./EventForms.css\";\n\nexport default class EventForms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      eventTitle: \"\",\n      dateTime: props.eventDate,\n      location: \"\",\n      Attendes: 0,\n      AssignedTo: \"Bob\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.closeForm();\n    this.props.addEvents(this.state);\n    this.props.calendarEvents.title = this.state.eventTitle;\n    this.props.calendarEvents.AssignedTo = this.state.AssignedTo;\n    this.props.addCalendarEvent(this.props.calendarEvents);\n    this.setState({\n      eventTitle: \"\",\n      dateTime: \"\",\n      location: \"\",\n      Attendes: 0,\n      AssignedTo: \"Bob\"\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"formEvent\">\n        <div className=\"container-fluid\">\n          <div className=\"row justify-content-center m-4\">\n            <div className=\"col-12 col-sm-8 col-md-7\">\n              <h1>Event form</h1>\n              <form className=\"Form-container\" onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"eventTitle\" className=\"float-left\">\n                    Event Title\n                  </label>\n                  <input\n                    name=\"eventTitle\"\n                    value={this.state.eventTitle}\n                    onChange={this.handleChange}\n                    placeholder=\"Event Title\"\n                    className=\"form-control mb-4\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"dateTime\" className=\"float-left\">\n                    Date and time\n                  </label>\n                  <input\n                    name=\"dateTime\"\n                    value={this.state.dateTime}\n                    onChange={this.handleChange}\n                    placeholder=\"date and time\"\n                    className=\"form-control\"\n                    id=\"date-time\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"location\" className=\"float-left\">\n                    Location\n                  </label>\n                  <input\n                    name=\"location\"\n                    value={this.state.location}\n                    onChange={this.handleChange}\n                    placeholder=\"Location\"\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"Attendes\" className=\"float-left\">\n                    Number of people attending\n                  </label>\n                  <input\n                    name=\"Attendes\"\n                    value={this.state.Attendes}\n                    onChange={this.handleChange}\n                    placeholder=\"Attendes\"\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"user\" className=\"float-left\">\n                    Assign to\n                  </label>\n                  <select\n                    name=\"AssignedTo\"\n                    className=\"form-control\"\n                    onChange={this.handleChange}\n                  >\n                    <option value={\"Bob\"} name=\"AssignedTo\">\n                      Bob\n                    </option>\n                    <option value={\"Robert\"} name=\"AssignedTo\">\n                      Robert\n                    </option>\n                  </select>\n                </div>\n                <button className=\"btn bg-black btn-block text-white\">\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./Bob.css\";\nimport EventList from \"./EventList\";\nimport { convert } from \"../helpers/dateFormat\";\nimport EventForm from \"./EventForms\";\n\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nfunction Bob({\n  BobEvents,\n  addEvents,\n  addCalendarEvent,\n  BobCalendarEvent,\n  user = \"Bob\"\n}) {\n  const [redirect, setredirect] = useState(false);\n  const [eventDate, seteventDate] = useState(\"\");\n\n  const [calendarEvents, setcalendarEvents] = useState([]);\n  const [start, setstart] = useState();\n  const [allDay, setallDay] = useState(true);\n\n  const handleChange = e => {\n    setstart(e.date);\n    setallDay(true);\n    seteventDate(convert(e));\n  };\n\n  useEffect(() => {\n    return () => {\n      setredirect(true);\n    };\n  }, [start]);\n\n  const closeForm = () => {\n    setredirect(false);\n  };\n\n  useEffect(() => {\n    const calendarSetter = () => {\n      return setcalendarEvents({ start, allDay, user });\n    };\n    calendarSetter();\n  }, [start]);\n\n  return (\n    <div className=\"Bob\">\n      {redirect ? (\n        <EventForm\n          closeForm={closeForm}\n          addEvents={addEvents}\n          eventDate={eventDate}\n          addCalendarEvent={addCalendarEvent}\n          calendarEvents={calendarEvents}\n        />\n      ) : (\n        <div className=\"Calendar\">\n          <h1>Bob's Event</h1>\n          <FullCalendar\n            defaultView=\"dayGridMonth\"\n            header={{\n              left: \"prev,next today\",\n              center: \"title\",\n              right: \"\"\n            }}\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            events={BobCalendarEvent}\n            dateClick={handleChange}\n          />\n          <EventList eventsInfo={BobEvents} />\n        </div>\n      )}\n    </div>\n  );\n}\nexport default Bob;\n","import React, { Component } from \"react\";\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div className=\"About\">\n        <h1>ABOUT!!</h1>\n        <ul>\n          <li className=\"float-left block\">\n            In Bob Component click the dates on the calendar, it will take you\n            to a form to fill\n          </li>\n          <li className=\"float-left block\">\n            at the option selector,can select to assign to bob or robert\n          </li>\n          <li className=\"float-left block\">\n            events will be displayed on either bob or robert depending on the\n            selected option\n          </li>\n\n          <li className=\"float-left block\">need to add better styling</li>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./Robert.css\";\nimport EventList from \"./EventList\";\nimport { convert } from \"../helpers/dateFormat\";\nimport EventForm from \"./EventForms\";\n\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nfunction Robert({\n  RobertEvents,\n  addEvents,\n  addCalendarEvent,\n  RobertCalendarEvent,\n  user = \"Robert\"\n}) {\n  const [redirect, setredirect] = useState(false);\n  const [eventDate, seteventDate] = useState(\"\");\n\n  const [calendarEvents, setcalendarEvents] = useState([]);\n  const [start, setstart] = useState();\n  const [allDay, setallDay] = useState(true);\n\n  const handleChange = e => {\n    setstart(e.date);\n    setallDay(true);\n    seteventDate(convert(e));\n  };\n\n  useEffect(() => {\n    return () => {\n      setredirect(true);\n    };\n  }, [start]);\n\n  const closeForm = () => {\n    setredirect(false);\n  };\n\n  useEffect(() => {\n    const calendarSetter = () => {\n      return setcalendarEvents({ start, allDay, user });\n    };\n    calendarSetter();\n  }, [start]);\n\n  return (\n    <div className=\"Robert\">\n      {redirect ? (\n        <EventForm\n          closeForm={closeForm}\n          addEvents={addEvents}\n          eventDate={eventDate}\n          addCalendarEvent={addCalendarEvent}\n          calendarEvents={calendarEvents}\n        />\n      ) : (\n        <div className=\"Calendar\">\n          <h1>Robert's Event</h1>\n          <FullCalendar\n            defaultView=\"dayGridMonth\"\n            header={{\n              left: \"prev,next today\",\n              center: \"title\",\n              right: \"\"\n            }}\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            events={RobertCalendarEvent}\n            dateClick={handleChange}\n          />\n          <EventList eventsInfo={RobertEvents} />\n        </div>\n      )}\n    </div>\n  );\n}\nexport default Robert;\n","import React, { Component } from \"react\";\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport \"./App.css\";\nimport Bob from \"./component/Bob\";\nimport About from \"./component/About\";\nimport Robert from \"./component/Robert\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      BobEvents: [],\n      RobertEvents: [],\n      BobCalendarEvent: [],\n      RobertCalendarEvent: []\n    };\n    this.addEvents = this.addEvents.bind(this);\n    this.addCalendarEvent = this.addCalendarEvent.bind(this);\n  }\n\n  addCalendarEvent(newCalendarEvent) {\n    if (newCalendarEvent.AssignedTo === \"Bob\") {\n      this.setState({\n        BobCalendarEvent: [...this.state.BobCalendarEvent, newCalendarEvent]\n      });\n    } else {\n      this.setState({\n        RobertCalendarEvent: [\n          ...this.state.RobertCalendarEvent,\n          newCalendarEvent\n        ]\n      });\n    }\n  }\n\n  addEvents(newEvent) {\n    if (newEvent.AssignedTo === \"Bob\") {\n      this.setState({\n        BobEvents: [...this.state.BobEvents, newEvent]\n      });\n    } else {\n      this.setState({\n        RobertEvents: [...this.state.RobertEvents, newEvent]\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <nav className=\"App-nav\">\n          <NavLink exact activeClassName=\"active-link\" to=\"/\">\n            About\n          </NavLink>\n          <NavLink exact activeClassName=\"active-link\" to=\"/Bob\">\n            Bob\n          </NavLink>\n          <NavLink exact activeClassName=\"active-link\" to=\"/Robert\">\n            Robert\n          </NavLink>\n        </nav>\n        <Switch>\n          <Route exact path=\"/\" component={About} />\n          <Route\n            exact\n            path=\"/Bob\"\n            render={() => (\n              <Bob\n                BobEvents={this.state.BobEvents}\n                addEvents={this.addEvents}\n                BobCalendarEvent={this.state.BobCalendarEvent}\n                addCalendarEvent={this.addCalendarEvent}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/Robert\"\n            render={() => (\n              <Robert\n                RobertEvents={this.state.RobertEvents}\n                addEvents={this.addEvents}\n                RobertCalendarEvent={this.state.RobertCalendarEvent}\n                addCalendarEvent={this.addCalendarEvent}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}