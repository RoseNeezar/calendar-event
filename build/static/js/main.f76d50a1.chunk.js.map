{"version":3,"sources":["guideGif/calendar.gif","hooks/useFormInput.js","component/Events/EventForms.js","component/EventsPopUp/EventPopList.js","component/EventsPopUp/EventPopUp.js","component/Bob.user.js/Bob.js","component/About.js","component/Robert.user.js/Robert.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","useState","value","setvalue","e","target","val","EventForms","closeForm","addEvents","calendarEvents","addCalendarEvent","useFormInput","eventTitle","seteventTitle","reseteventTitle","dateTime","setdateTime","resetdateTime","location","setlocation","resetlocation","Attendes","setAttendes","resetAttendes","AssignedTo","setAssignedTo","resetAssignedTo","className","onSubmit","preventDefault","title","handleSubmit","htmlFor","name","onChange","placeholder","id","EventPopList","eventList","List","map","st","key","ListItem","AlertDialog","openPopEvent","popEvent","eventsInfo","open","setOpen","seteventList","isFirstRun","useRef","useEffect","current","eventFilter","filter","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","useStyles","makeStyles","theme","card","maxWidth","Bob","BobEvents","BobCalendarEvent","user","redirect","setredirect","setcalendarEvents","start","setstart","allDay","setallDay","setopenPopEvent","setpopEvent","classes","Paper","style","padding","margin","height","elevation","Grid","container","justify","marginTop","Card","CardContent","defaultView","header","left","center","right","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","events","dateClick","date","eventClick","event","About","backgroundColor","CardActionArea","paddingBottom","src","logo","alt","Typography","gutterBottom","variant","component","color","Robert","RobertEvents","RobertCalendarEvent","root","flexGrow","menuButton","marginRight","spacing","textAlign","list","width","fullList","App","side","setBobEvents","setRobertEvents","setBobCalendarEvent","setRobertCalendarEvent","newCalendarEvent","calendarItems","uuid","newEvent","eventItem","React","state","setState","toggleDrawer","type","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","Drawer","role","onKeyDown","exact","Link","to","ListItemText","primary","Divider","path","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f76d50a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/calendar.14da66b3.gif\";","import { useState } from \"react\";\nexport default initialState => {\n  const [value, setvalue] = useState(initialState);\n  const handleChange = e => {\n    setvalue(e.target.value);\n  };\n  const reset = val => {\n    setvalue(val);\n  };\n  return [value, handleChange, reset];\n};\n","import React from \"react\";\nimport \"./EventForms.css\";\nimport useFormInput from \"../../hooks/useFormInput\";\n\nfunction EventForms({\n  closeForm,\n  addEvents,\n  calendarEvents,\n  addCalendarEvent\n}) {\n  const [eventTitle, seteventTitle, reseteventTitle] = useFormInput(\"\");\n  const [dateTime, setdateTime, resetdateTime] = useFormInput(\"Time\");\n  const [location, setlocation, resetlocation] = useFormInput(\"\");\n  const [Attendes, setAttendes, resetAttendes] = useFormInput(0);\n  const [AssignedTo, setAssignedTo, resetAssignedTo] = useFormInput(\"Bob\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    closeForm();\n    addEvents({ eventTitle, dateTime, location, Attendes, AssignedTo });\n    calendarEvents.title = eventTitle;\n    calendarEvents.AssignedTo = AssignedTo;\n    addCalendarEvent(calendarEvents);\n    reseteventTitle();\n    resetdateTime();\n    resetlocation();\n    resetAttendes(0);\n    resetAssignedTo(\"Bob\");\n  };\n\n  return (\n    <div className=\"formEvent\">\n      <div className=\"container-fluid\">\n        <div className=\"row justify-content-center m-4\">\n          <div className=\"col-12 col-sm-8 col-md-7\">\n            <h1>Event form</h1>\n            <form className=\"Form-container\" onSubmit={e => handleSubmit(e)}>\n              <div className=\"form-group\">\n                <label htmlFor=\"eventTitle\" className=\"float-left\">\n                  Event Title\n                </label>\n                <input\n                  name=\"eventTitle\"\n                  value={eventTitle}\n                  onChange={seteventTitle}\n                  placeholder=\"Event Title\"\n                  className=\"form-control mb-4\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"dateTime\" className=\"float-left\">\n                  Date and time\n                </label>\n                <input\n                  name=\"dateTime\"\n                  value={dateTime}\n                  onChange={setdateTime}\n                  placeholder=\"date and time\"\n                  className=\"form-control\"\n                  id=\"date-time\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"location\" className=\"float-left\">\n                  Location\n                </label>\n                <input\n                  name=\"location\"\n                  value={location}\n                  onChange={setlocation}\n                  placeholder=\"Location\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"Attendes\" className=\"float-left\">\n                  Number of people attending\n                </label>\n                <input\n                  name=\"Attendes\"\n                  value={Attendes}\n                  onChange={setAttendes}\n                  placeholder=\"Attendes\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"user\" className=\"float-left\">\n                  Assign to\n                </label>\n                <select\n                  name=\"AssignedTo\"\n                  className=\"form-control\"\n                  onChange={setAssignedTo}\n                >\n                  <option value={\"Bob\"} name=\"AssignedTo\">\n                    Bob\n                  </option>\n                  <option value={\"Robert\"} name=\"AssignedTo\">\n                    Robert\n                  </option>\n                </select>\n              </div>\n              <button className=\"btn bg-black btn-block text-white\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EventForms;\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport EventPopItem from \"./EventPopItem\";\n\nfunction EventPopList({ eventList }) {\n  return (\n    <List>\n      {eventList.map(st => {\n        return (\n          <div key={st.id}>\n            <ListItem>Date/Time : {st.dateTime}</ListItem>\n            <ListItem>Location : {st.location}</ListItem>\n            <ListItem>Number Of People : {st.Attendes}</ListItem>\n            <ListItem>Assigned To : {st.AssignedTo}</ListItem>\n          </div>\n        );\n      })}\n    </List>\n  );\n}\n\nexport default EventPopList;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport EventPopList from \"./EventPopList\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function AlertDialog({ openPopEvent, popEvent, eventsInfo }) {\n  const [open, setOpen] = useState(false);\n  const [eventList, seteventList] = useState(\"\");\n  const isFirstRun = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    const setOpenPop = () => {\n      return setOpen(true);\n    };\n    setOpenPop();\n  }, [openPopEvent]);\n\n  useEffect(() => {\n    const eventFilter = eventsInfo.filter(e => e.eventTitle === popEvent);\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    const setEventPop = () => {\n      return seteventList(eventFilter);\n    };\n    setEventPop();\n  }, [open]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{popEvent}</DialogTitle>\n        <EventPopList eventList={eventList} popEvent={popEvent} />\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport EventForm from \"../Events/EventForms\";\nimport EventPopUp from \"../EventsPopUp/EventPopUp\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 1000\n  }\n}));\n\nfunction Bob({\n  BobEvents,\n  addEvents,\n  addCalendarEvent,\n  BobCalendarEvent,\n  user = \"Bob\"\n}) {\n  const [redirect, setredirect] = useState(false);\n\n  const [calendarEvents, setcalendarEvents] = useState([]);\n  const [start, setstart] = useState();\n  const [allDay, setallDay] = useState(true);\n  const [openPopEvent, setopenPopEvent] = useState(false);\n  const [popEvent, setpopEvent] = useState(\"\");\n\n  const handlePopEvent = e => {\n    setopenPopEvent(!openPopEvent);\n    setpopEvent(e.event.title);\n  };\n\n  const handleChange = e => {\n    setstart(e.date);\n    setallDay(true);\n  };\n\n  useEffect(() => {\n    return () => {\n      setredirect(true);\n    };\n  }, [start]);\n\n  const closeForm = () => {\n    setredirect(false);\n  };\n\n  useEffect(() => {\n    const calendarSetter = () => {\n      return setcalendarEvents({ start, allDay, user });\n    };\n    calendarSetter();\n  }, [start]);\n\n  const classes = useStyles();\n\n  return (\n    <Paper\n      style={{\n        padding: 0,\n        margin: 0,\n        height: \"100vh\"\n      }}\n      elevation={0}\n    >\n      <Grid\n        container\n        justify=\"center\"\n        style={{\n          marginTop: \"3rem\"\n        }}\n      >\n        {redirect ? (\n          <EventForm\n            closeForm={closeForm}\n            addEvents={addEvents}\n            addCalendarEvent={addCalendarEvent}\n            calendarEvents={calendarEvents}\n          />\n        ) : (\n          <Card className={classes.card}>\n            <CardContent>\n              <h1>Bob's Event</h1>\n              <FullCalendar\n                defaultView=\"dayGridMonth\"\n                header={{\n                  left: \"prev,next \",\n                  center: \"title\",\n                  right: \"\"\n                }}\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                events={BobCalendarEvent}\n                dateClick={handleChange}\n                eventClick={handlePopEvent}\n              />\n              <EventPopUp\n                openPopEvent={openPopEvent}\n                eventsInfo={BobEvents}\n                popEvent={popEvent}\n              />\n            </CardContent>\n          </Card>\n        )}\n      </Grid>\n    </Paper>\n  );\n}\nexport default Bob;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport logo from \"../guideGif/calendar.gif\";\nimport \"./About.css\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 500\n  }\n}));\nfunction About() {\n  const classes = useStyles();\n\n  return (\n    <Paper\n      style={{\n        padding: 0,\n        margin: 0,\n        height: \"100vh\",\n        backgroundColor: \"#fafafa\"\n      }}\n      elevation={0}\n    >\n      <Grid\n        container\n        justify=\"center\"\n        style={{\n          marginTop: \"1rem\"\n        }}\n      >\n        <Card className={classes.card}>\n          <CardActionArea style={{ paddingBottom: 50 }}>\n            <img\n              src={logo}\n              alt=\"loading...\"\n              className=\"rounded mx-auto d-block \"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                About .\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Calendar planner\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Grid>\n    </Paper>\n  );\n}\nexport default About;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Robert.css\";\nimport EventForm from \"../Events/EventForms\";\nimport EventPopUp from \"../EventsPopUp/EventPopUp\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 1000\n  }\n}));\n\nfunction Robert({\n  RobertEvents,\n  addEvents,\n  addCalendarEvent,\n  RobertCalendarEvent,\n  user = \"Robert\"\n}) {\n  const [redirect, setredirect] = useState(false);\n\n  const [calendarEvents, setcalendarEvents] = useState([]);\n  const [start, setstart] = useState();\n  const [allDay, setallDay] = useState(true);\n  const [openPopEvent, setopenPopEvent] = useState(false);\n  const [popEvent, setpopEvent] = useState(\"\");\n\n  const handlePopEvent = e => {\n    setopenPopEvent(!openPopEvent);\n    setpopEvent(e.event.title);\n  };\n\n  const handleChange = e => {\n    setstart(e.date);\n    setallDay(true);\n  };\n\n  useEffect(() => {\n    return () => {\n      setredirect(true);\n    };\n  }, [start]);\n\n  const closeForm = () => {\n    setredirect(false);\n  };\n\n  useEffect(() => {\n    const calendarSetter = () => {\n      return setcalendarEvents({ start, allDay, user });\n    };\n    calendarSetter();\n  }, [start]);\n\n  const classes = useStyles();\n\n  return (\n    <Paper\n      style={{\n        padding: 0,\n        margin: 0,\n        height: \"100vh\"\n      }}\n      elevation={0}\n    >\n      <Grid\n        container\n        justify=\"center\"\n        style={{\n          marginTop: \"3rem\"\n        }}\n      >\n        {redirect ? (\n          <EventForm\n            closeForm={closeForm}\n            addEvents={addEvents}\n            addCalendarEvent={addCalendarEvent}\n            calendarEvents={calendarEvents}\n          />\n        ) : (\n          <Card className={classes.card}>\n            <CardContent>\n              <h1>Robert's Event</h1>\n              <FullCalendar\n                defaultView=\"dayGridMonth\"\n                header={{\n                  left: \"prev,next today\",\n                  center: \"title\",\n                  right: \"\"\n                }}\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                events={RobertCalendarEvent}\n                dateClick={handleChange}\n                eventClick={handlePopEvent}\n              />\n\n              <EventPopUp\n                openPopEvent={openPopEvent}\n                eventsInfo={RobertEvents}\n                popEvent={popEvent}\n              />\n            </CardContent>\n          </Card>\n        )}\n      </Grid>\n    </Paper>\n  );\n}\nexport default Robert;\n","import React, { useState } from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport Bob from \"./component/Bob.user.js/Bob\";\nimport About from \"./component/About\";\nimport Robert from \"./component/Robert.user.js/Robert\";\nimport uuid from \"uuid/v4\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"center\"\n  },\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n}));\n\nfunction App() {\n  const [BobEvents, setBobEvents] = useState([]);\n  const [RobertEvents, setRobertEvents] = useState([]);\n  const [BobCalendarEvent, setBobCalendarEvent] = useState([]);\n  const [RobertCalendarEvent, setRobertCalendarEvent] = useState([]);\n\n  const addCalendarEvent = newCalendarEvent => {\n    let calendarItems = { ...newCalendarEvent, id: uuid() };\n    if (newCalendarEvent.AssignedTo === \"Bob\") {\n      setBobCalendarEvent([...BobCalendarEvent, calendarItems]);\n    } else {\n      setRobertCalendarEvent([...RobertCalendarEvent, calendarItems]);\n    }\n  };\n\n  const addEvents = newEvent => {\n    let eventItem = { ...newEvent, id: uuid() };\n    if (newEvent.AssignedTo === \"Bob\") {\n      setBobEvents([...BobEvents, eventItem]);\n    } else {\n      setRobertEvents([...RobertEvents, eventItem]);\n    }\n  };\n\n  const [state, setState] = React.useState({\n    left: false\n  });\n\n  const toggleDrawer = (side, open) => event => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    setState({ ...state, [side]: open });\n  };\n\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        <>\n          <ListItem key={\"about\"} exact=\"true\" component={Link} to=\"/\">\n            <ListItemText primary={\"About\"} />\n          </ListItem>\n          <Divider />\n          <ListItem key={\"Bob\"} exact=\"true\" component={Link} to=\"/Bob\">\n            <ListItemText primary={\"Bob\"} />\n          </ListItem>\n          <ListItem key={\"Robert\"} exact=\"true\" component={Link} to=\"/Robert\">\n            <ListItemText primary={\"Robert\"} />\n          </ListItem>\n        </>\n      </List>\n      <Divider />\n    </div>\n  );\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"static\"\n        style={{\n          backgroundColor: \"#2c3e50\"\n        }}\n      >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon onClick={toggleDrawer(\"left\", true)} />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Calendar Planner\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer open={state.left} onClose={toggleDrawer(\"left\", false)}>\n        {sideList(\"left\")}\n      </Drawer>\n      <Switch>\n        <Route exact path=\"/\" component={About} />\n        <Route\n          exact\n          path=\"/Bob\"\n          render={() => (\n            <Bob\n              BobEvents={BobEvents}\n              addEvents={addEvents}\n              BobCalendarEvent={BobCalendarEvent}\n              addCalendarEvent={addCalendarEvent}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/Robert\"\n          render={() => (\n            <Robert\n              RobertEvents={RobertEvents}\n              addEvents={addEvents}\n              RobertCalendarEvent={RobertCalendarEvent}\n              addCalendarEvent={addCalendarEvent}\n            />\n          )}\n        />\n      </Switch>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}