{"version":3,"sources":["component/Event.js","component/EventList.js","helpers/dateFormat.js","component/EventForms.js","component/Bob.js","component/About.js","component/EventListRobert.js","component/Robert.js","App.js","serviceWorker.js","index.js"],"names":["Event","props","state","isOpen","toggleAccordion","bind","this","setState","onClick","className","dateTime","Collapse","eventTitle","location","Attendes","Component","EventList","BobEvents","map","st","currentDate","eventDate","convert","str","date","Date","mnth","getMonth","slice","getDate","getFullYear","join","EventForms","AssignedTo","handleChange","handleSubmit","e","target","name","value","preventDefault","closeForm","addEvents","onSubmit","htmlFor","onChange","placeholder","id","Bob","defaultProps","user","useState","setdate","redirect","setredirect","seteventDate","onClickDay","About","RobertEvents","Robert","App","newEvent","exact","activeClassName","to","path","component","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.996e085e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Collapse } from \"reactstrap\";\n\nexport default class Event extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.toggleAccordion = this.toggleAccordion.bind(this);\n  }\n\n  toggleAccordion() {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    return (\n      <div>\n        <div\n          onClick={this.toggleAccordion}\n          className=\"port-item p-4 bg-primary\"\n        >\n          <button className=\"btn btn-primary\">{this.props.dateTime}</button>\n        </div>\n        <Collapse isOpen={this.state.isOpen}>\n          <div>\n            <ul>\n              <li>{this.props.eventTitle}</li>\n              <li>Location : {this.props.location}</li>\n              <li>Number of people : {this.props.Attendes}</li>\n            </ul>\n          </div>\n        </Collapse>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n\nexport default class EventList extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.BobEvents.map(st => {\n          return (\n            <Event\n              eventTitle={st.eventTitle}\n              dateTime={st.dateTime}\n              location={st.location}\n              Attendes={st.Attendes}\n              currentDate={this.props.eventDate}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import { useEffect, useRef } from \"react\";\n\nconst convert = str => {\n  var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n  return [day, mnth, date.getFullYear()].join(\"/\");\n};\n\nconst usePrevious = val => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = val;\n  });\n  return ref.current;\n};\n\nexport { convert, usePrevious };\n","import React, { Component } from \"react\";\nimport \"./EventForms.css\";\n\nexport default class EventForms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      eventTitle: \"\",\n      dateTime: props.eventDate,\n      location: \"\",\n      Attendes: 0,\n      AssignedTo: \"Bob\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.closeForm();\n    this.props.addEvents(this.state);\n    this.setState({\n      eventTitle: \"\",\n      dateTime: \"\",\n      location: \"\",\n      Attendes: 0,\n      AssignedTo: \"Bob\"\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"formEvent\">\n        <div className=\"container-fluid\">\n          <div className=\"row justify-content-center m-4\">\n            <div className=\"col-12 col-sm-8 col-md-7\">\n              <h1>Event form</h1>\n              <form className=\"Form-container\" onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"eventTitle\" className=\"float-left\">\n                    Event Title\n                  </label>\n                  <input\n                    name=\"eventTitle\"\n                    value={this.state.eventTitle}\n                    onChange={this.handleChange}\n                    placeholder=\"Event Title\"\n                    className=\"form-control mb-4\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"dateTime\" className=\"float-left\">\n                    Date and time\n                  </label>\n                  <input\n                    name=\"dateTime\"\n                    value={this.state.dateTime}\n                    onChange={this.handleChange}\n                    placeholder={this.props.eventDate}\n                    className=\"form-control\"\n                    id=\"date-time\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"location\" className=\"float-left\">\n                    Location\n                  </label>\n                  <input\n                    name=\"location\"\n                    value={this.state.location}\n                    onChange={this.handleChange}\n                    placeholder=\"Location\"\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"Attendes\" className=\"float-left\">\n                    Number of people attending\n                  </label>\n                  <input\n                    name=\"Attendes\"\n                    value={this.state.Attendes}\n                    onChange={this.handleChange}\n                    placeholder=\"Attendes\"\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"user\" className=\"float-left\">\n                    Assign to\n                  </label>\n                  <select\n                    name=\"AssignedTo\"\n                    className=\"form-control\"\n                    onChange={this.handleChange}\n                  >\n                    <option value={\"Bob\"} name=\"AssignedTo\">\n                      Bob\n                    </option>\n                    <option value={\"Robert\"} name=\"AssignedTo\">\n                      Robert\n                    </option>\n                  </select>\n                </div>\n                <button className=\"btn bg-black btn-block text-white\">\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"./Bob.css\";\nimport EventList from \"./EventList\";\nimport { convert } from \"../helpers/dateFormat\";\nimport EventForm from \"./EventForms\";\n\nfunction Bob({ BobEvents, addEvents }) {\n  Bob.defaultProps = {\n    user: \"Bob\"\n  };\n  const [date, setdate] = useState(new Date());\n  const [redirect, setredirect] = useState(false);\n  const [eventDate, seteventDate] = useState(\"\");\n\n  const handleChange = e => {\n    setdate(e);\n    setredirect(true);\n    seteventDate(convert(e));\n  };\n\n  const closeForm = () => {\n    setredirect(false);\n  };\n\n  return (\n    <div className=\"Bob\">\n      {redirect ? (\n        <EventForm\n          closeForm={closeForm}\n          addEvents={addEvents}\n          eventDate={eventDate}\n        />\n      ) : (\n        <div className=\"Calendar\">\n          <h1>Bob's Event</h1>\n          <Calendar onClickDay={handleChange} value={date} />\n          <EventList BobEvents={BobEvents} user={Bob} />\n        </div>\n      )}\n    </div>\n  );\n}\nexport default Bob;\n","import React, { Component } from \"react\";\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div className=\"About\">\n        <h1>ABOUT!!</h1>\n        <ul>\n          <li className=\"float-left block\">\n            In Bob Component click the dates on the calendar, it will take you\n            to a form to fill\n          </li>\n          <li className=\"float-left block\">\n            at the option selector,can select to assign to bob or robert\n          </li>\n          <li className=\"float-left block\">\n            events will be displayed on either bob or robert depending on the\n            selected option\n          </li>\n          <li className=\"float-left block\">\n            current state need to manually click back the component name to go\n            back to bob or robert from form\n          </li>\n          <li className=\"float-left block\">need to add better styling</li>\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Event from \"./Event\";\n\nexport default class EventList extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.RobertEvents.map(st => {\n          return (\n            <Event\n              eventTitle={st.eventTitle}\n              dateTime={st.dateTime}\n              location={st.location}\n              Attendes={st.Attendes}\n              currentDate={this.props.eventDate}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"./Bob.css\";\nimport EventList from \"./EventListRobert\";\nimport { convert } from \"../helpers/dateFormat\";\nimport EventForm from \"./EventForms\";\n\nfunction Robert({ RobertEvents, addEvents }) {\n  Robert.defaultProps = {\n    user: \"Robert\"\n  };\n  const [date, setdate] = useState(new Date());\n  const [redirect, setredirect] = useState(false);\n  const [eventDate, seteventDate] = useState(\"\");\n\n  const handleChange = e => {\n    setdate(e);\n    setredirect(true);\n    seteventDate(convert(e));\n  };\n\n  const closeForm = () => {\n    setredirect(false);\n  };\n\n  return (\n    <div className=\"Robert\">\n      {redirect ? (\n        <EventForm\n          closeForm={closeForm}\n          addEvents={addEvents}\n          eventDate={eventDate}\n        />\n      ) : (\n        <div className=\"Calendar\">\n          <h1>Roberts's Event</h1>\n          <Calendar onClickDay={handleChange} value={date} />\n          <EventList RobertEvents={RobertEvents} user={Robert} />\n        </div>\n      )}\n    </div>\n  );\n}\nexport default Robert;\n","import React, { Component } from \"react\";\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport \"./App.css\";\nimport Bob from \"./component/Bob\";\nimport About from \"./component/About\";\nimport Robert from \"./component/Robert\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      BobEvents: [],\n      RobertEvents: []\n    };\n    this.addEvents = this.addEvents.bind(this);\n  }\n\n  addEvents(newEvent) {\n    if (newEvent.AssignedTo === \"Bob\") {\n      this.setState({\n        BobEvents: [...this.state.BobEvents, newEvent]\n      });\n    } else {\n      this.setState({\n        RobertEvents: [...this.state.RobertEvents, newEvent]\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <nav className=\"App-nav\">\n          <NavLink exact activeClassName=\"active-link\" to=\"/\">\n            About\n          </NavLink>\n          <NavLink exact activeClassName=\"active-link\" to=\"/Bob\">\n            Bob\n          </NavLink>\n          <NavLink exact activeClassName=\"active-link\" to=\"/Robert\">\n            Robert\n          </NavLink>\n        </nav>\n        <Switch>\n          <Route exact path=\"/\" component={About} />\n          <Route\n            exact\n            path=\"/Bob\"\n            render={() => (\n              <Bob\n                BobEvents={this.state.BobEvents}\n                addEvents={this.addEvents}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/Robert\"\n            render={() => (\n              <Robert\n                RobertEvents={this.state.RobertEvents}\n                addEvents={this.addEvents}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}